// Generated by CoffeeScript 1.9.0
/*
https://spreadsheets.google.com/feeds/worksheets/{SHEET-ID}/public/basic?alt=json       get grid ids
https://spreadsheets.google.com/feeds/list/{SHEET-ID}/{GRID-ID}/public/values?alt=json  get whole sheet data
https://spreadsheets.google.com/feeds/cells/{SHEET-ID}/{GRID-ID}/public/values          get all cell data
alt=json                                                                                return json
alt=json-in-script&callback={CALLBACK}                                                  return data to callback function

https://spreadsheets.google.com/feeds/worksheets/1wzAwAH4rJ72Zw6r-bjoUujfS5SMOEr38s99NxKmNk4g/public/basic?alt=json
 */
var wizLoader;
var sheetID='1aLq_rLTl2SRwfbpL5ti5fOUw_VIopTDORskECJqSTow';
var gridID='op44ln6';
var Setting;

Setting = {
  localStorage: false,
  cache: {
    adLoading: "1",
    searchMinLength: "1"
  },
  init: function() {
    var key, localSetting, result, _ref;
    Setting.localStorage = Setting.localStorageSupport();
    if (Setting.localStorage) {
      localSetting = localStorage.getItem("wizSetting");
    } else {
      localSetting = util.getCookie("wizSetting");
    }
    Setting.cache = $.extend({}, Setting.cache, JSON.parse(localSetting));
    _ref = Setting.cache;
    for (key in _ref) {
      result = _ref[key];
      $('.' + key).val(result);
    }
  },
  get: function(key) {
    return Setting.cache[key];
  },
  save: function(json) {
    var k, localSetting, v, _i, _len;
    localSetting = {};
    for (k = _i = 0, _len = json.length; _i < _len; k = ++_i) {
      v = json[k];
      localSetting[v.name] = v.value;
    }
    Setting.cache = localSetting;
    if (Setting.localStorage === true) {
      return localStorage.setItem("wizSetting", JSON.stringify(localSetting));
    } else {
      return util.setCookie("wizSetting", JSON.stringify(localSetting), "");
    }
  },
  localStorageSupport: function() {
    var e;
    try {
      localStorage.setItem("test", "test");
      localStorage.removeItem("test");
      return true;
    } catch (_error) {
      e = _error;
      return false;
    }
  }
};


wizLoader = (function() {
  function wizLoader() {}

  wizLoader.data = {
    normal: [],
    count: 0
  };

  wizLoader.option = {
    sheedId: sheetID,
    gridIds: {
      '四排序題': gridID,
    },
    loadCount: 0
  };

  wizLoader.addScript = function(gridEntry) {
    var s, src;
    src = "https://spreadsheets.google.com/feeds/cells/" + this.option.sheedId + "/" + gridEntry + "/public/values?alt=json-in-script&callback=wizLoader.load";
    s = document.createElement('script');
    s.setAttribute('src', src);
    return document.body.appendChild(s);
  };

  wizLoader.load = function(data) {
    var tmp;
    tmp = data.feed.id.$t.split('/');
    if (tmp.length === 9) {
      if (tmp[6] === 'op44ln6') {
		return this._loadNormal(data.feed.entry);
      }
    }
  };

  wizLoader._loadNormal = function(data) {
    var col, entry, index, keys, tmp;
    tmp = {};
    col = 0;
    keys = ['', '', 'color', 'type', 'question', 'answer'];
    for (index in data) {
      entry = data[index];
      if (parseInt(entry.gs$cell.row) <= 1) {
        continue;
      }
      col = parseInt(entry.gs$cell.col);
      if (col >= 2 && col <= 5) {
        if (col === 2) {
          tmp = {};
		  tmp['color'] = '無色'
		  tmp['type'] = '活動'
		  tmp['question'] = entry.content.$t;
        }
        if (col === 3) {
		  tmp['answer'] = entry.content.$t;
          this.data.normal.push(tmp);
        }
      }
    }
    return this._loadComplete();
  };

  wizLoader._loadComplete = function() {
    this.data.count++;
    if (this.data.count === Object.keys(this.option.gridIds).length) {
      $("#overlay-loading").remove();
      $("#load-count").text('共讀取了 ' + this.data.normal.length + ' 個問題。');
    } else {
      $("#loaded-count").text(this.data.count + '/' + Object.keys(this.option.gridIds).length);
    }
  };

  wizLoader.htmlEncode = function(html) {
    return document.createElement('a').appendChild(document.createTextNode(html)).parentNode.innerHTML;
  };

  wizLoader.highlight = function(keyword, msg) {
    var kw, _i, _len;
    if (Array.isArray(keyword)) {
      for (_i = 0, _len = keyword.length; _i < _len; _i++) {
        kw = keyword[_i];
        msg = msg.split(kw).join("<b>" + kw + "</b>");
      }
    } else {
      msg = msg.split(keyword).join("<b>" + keyword + "</b>");
    }
    return msg;
  };

  wizLoader._initEvent = function() {
    $(".form").submit(function(e) {
      e.preventDefault();
      return false;
    });
    $(".from-source").on("change", function() {
      return $("#inputKeyword").trigger("keyup");
    });
    $("#result").on("click", ".btn-more", function() {
      var data, pos, text, tr, trOffset, type;
      tr = $(this).parents("tr");
      type = tr.data("type");
      pos = tr.data("pos");
      trOffset = tr.offset();
      data = {};
      text = '';
      if (type === 'normal') {
        data = wizLoader.data[type][pos];
        text = "題目顏色：" + data.color + "，題目類型：" + data.type + "，";
      } 
      text += "<a id=\"question-report\" href=\"javascript:void\" data-question=\"" + data.question + "\" data-answer=\"" + data.answer + "\">錯誤回報</a>";
      $("#question-info").css({
        top: trOffset.top,
        left: trOffset.left,
        width: tr.width(),
        height: tr.height()
      }).addClass("active");
      return $("#question-info .info div").html(text);
    });
    $("#question-info").on("click", ".btn-close", function() {
      return $("#question-info").removeClass("active");
    });
    $("#question-info").on("click", "#question-report", function() {
      var answer, question, url;
      question = encodeURIComponent($(this).data("question"));
      answer = encodeURIComponent($(this).data("answer"));
      url = "https://docs.google.com/forms/d/1wf8aclD8hGFxwiJwpTE1NfF3qnSVnLOZWbzlalBzNj4/viewform?entry.2109388025=%E9%A1%8C%E7%9B%AE%EF%BC%9A" + question + "%0A%E5%8E%9F%E5%A7%8B%E7%AD%94%E6%A1%88%EF%BC%9A" + answer + "%0A%E4%BF%AE%E6%94%B9%E9%A0%85%E7%9B%AE%EF%BC%9A";
      $("#report-modal iframe").attr("src", url);
      return $('#report-modal').modal('show');
    });
    $("#inputKeyword").on("keyup", function() {
      var entry, index, val, vals, _ref, _ref1, _ref2;
	  var i;
      val = $(this).val();
      $("#question-info").removeClass("active");
      $("#result").html("");
	  if (val.length < Setting.get("searchMinLength")) {
		return;
	  }
      val = val.toLowerCase();
	  vals = val.split(' ');
	  // clear space
	  for( i = 0 ; i < vals.length; ++i) {
		if (vals[i] == "") {
			vals.splice(i, 1);
			--i;
		}
	  }

	  // hidden checkbox
      // if ($("#fromNormal:checked").val() === '1') {
	  if( true ) {
        _ref = wizLoader.data.normal;
        for (index in _ref) {
          entry = _ref[index];
          if (typeof entry.question === 'undefined') {
            console.debug(entry);
            continue;
          }
		  var found = true;
		  for(i=0; i < vals.length; ++i ) {
			  if (entry.question.toLowerCase().indexOf(vals[i]) === -1 && entry.answer.toLowerCase().indexOf(vals[i]) === -1) {
				  found = false;
				  break;
			  }
		  }
		  if(found) {
			$("#result").append('<tr data-pos="' + index + '" data-type="normal"><td class="td-more"><a href="javascript:void(0);" class="btn-more">更多</a></td><td><div class="question">' + wizLoader.highlight(vals, entry.question) + '</div><div class="text-danger">' + wizLoader.htmlEncode(entry.answer) + '</div></td></tr>');
		  }
        }
      }
    });
    $("#form-setting").on("submit", function(e) {
      e.preventDefault();
      Setting.save($("#form-setting").serializeArray());
      $('#setting-modal').modal('hide');
      return false;
    });
  };

  wizLoader.init = function() {
    var entry, type, _ref;
    _ref = this.option.gridIds;
    for (type in _ref) {
      entry = _ref[type];
      this.addScript(entry);
    }
    this._initEvent();
  };

  return wizLoader;

})();
